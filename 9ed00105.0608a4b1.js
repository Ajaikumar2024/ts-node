(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{82:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),b=(n(0),n(95)),i={title:"Configuration"},l={unversionedId:"configuration",id:"configuration",isDocsHomePage:!1,title:"Configuration",description:"ts-node supports a variety of options which can be specified via tsconfig.json, as CLI flags, as environment variables, or programmatically.",source:"@site/docs/configuration.md",slug:"/configuration",permalink:"/ts-node/docs/configuration",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/configuration.md",version:"current",sidebar:"primarySidebar",previous:{title:"Usage",permalink:"/ts-node/docs/usage"},next:{title:"Imports: CommonJS vs native modules",permalink:"/ts-node/docs/imports"}},c=[{value:"CLI flags",id:"cli-flags",children:[]},{value:"<code>ts-node</code> options via tsconfig.json (recommended)",id:"ts-node-options-via-tsconfigjson-recommended",children:[]},{value:"Options",id:"options",children:[]},{value:"<code>node</code> flags",id:"node-flags",children:[]}],o={toc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," supports a variety of options which can be specified via ",Object(b.b)("inlineCode",{parentName:"p"},"tsconfig.json"),", as CLI flags, as environment variables, or programmatically."),Object(b.b)("h2",{id:"cli-flags"},"CLI flags"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," CLI flags must come ",Object(b.b)("em",{parentName:"p"},"before")," the entrypoint script. For example:"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ ts-node --project tsconfig-dev.json say-hello.ts Ronald\nHello, Ronald!\n")),Object(b.b)("h2",{id:"ts-node-options-via-tsconfigjson-recommended"},Object(b.b)("inlineCode",{parentName:"h2"},"ts-node")," options via tsconfig.json (recommended)"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," automatically finds and loads ",Object(b.b)("inlineCode",{parentName:"p"},"tsconfig.json"),".  Use ",Object(b.b)("inlineCode",{parentName:"p"},"--skip-project")," to skip loading the ",Object(b.b)("inlineCode",{parentName:"p"},"tsconfig.json"),".  Use ",Object(b.b)("inlineCode",{parentName:"p"},"--project")," to explicitly specify the path to a ",Object(b.b)("inlineCode",{parentName:"p"},"tsconfig.json"),"."),Object(b.b)("p",null,"When searching, it is resolved using ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.typescriptlang.org/docs/handbook/tsconfig-json.html"}),"the same search behavior as ",Object(b.b)("inlineCode",{parentName:"a"},"tsc")),". By default, this search is performed relative to the entrypoint script. In ",Object(b.b)("inlineCode",{parentName:"p"},"--cwd-mode")," or if no entrypoint is specified -- for example when using the REPL -- the search is performed relative to ",Object(b.b)("inlineCode",{parentName:"p"},"--cwd")," / ",Object(b.b)("inlineCode",{parentName:"p"},"process.cwd()"),"."),Object(b.b)("p",null,"Most ",Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," options can be specified by a ",Object(b.b)("inlineCode",{parentName:"p"},'"ts-node"')," object in ",Object(b.b)("inlineCode",{parentName:"p"},"tsconfig.json")," using their programmatic, camelCase names.  We recommend this because it works even when you cannot pass CLI flags, such as ",Object(b.b)("inlineCode",{parentName:"p"},"node --require ts-node/register")," and when using shebangs."),Object(b.b)("p",null,"For example, you can use this configuration as a starting point:"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'}),'{\n  // This is an alias to @tsconfig/node10: https://github.com/tsconfig/bases\n  "extends": "ts-node/node10/tsconfig.json",\n\n  // Most ts-node options can be specified here using their programmatic names.\n  "ts-node": {\n    // It is faster to skip typechecking.\n    // Remove if you want ts-node to do typechecking.\n    "transpileOnly": true,\n\n    "files": true,\n\n    "compilerOptions": {\n      // compilerOptions specified here will override those declared below,\n      // but *only* in ts-node.  Useful if you want ts-node and tsc to use\n      // different options with a single tsconfig.json.\n    }\n  }\n}\n')),Object(b.b)("p",null,"Our bundled ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://unpkg.com/browse/ts-node@latest/tsconfig.schema.json"}),"JSON schema")," lists all compatible options."),Object(b.b)("h2",{id:"options"},"Options"),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," supports ",Object(b.b)("inlineCode",{parentName:"p"},"--print")," (",Object(b.b)("inlineCode",{parentName:"p"},"-p"),"), ",Object(b.b)("inlineCode",{parentName:"p"},"--eval")," (",Object(b.b)("inlineCode",{parentName:"p"},"-e"),"), ",Object(b.b)("inlineCode",{parentName:"p"},"--require")," (",Object(b.b)("inlineCode",{parentName:"p"},"-r"),") and ",Object(b.b)("inlineCode",{parentName:"p"},"--interactive")," (",Object(b.b)("inlineCode",{parentName:"p"},"-i"),") similar to the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/api/cli.html"}),"node.js CLI options"),"."),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"API options with an * cannot be specified via ",Object(b.b)("inlineCode",{parentName:"em"},"tsconfig.json"))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"CLI"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Environment Variable"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"API & tsconfig.json"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-h, --help")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Prints the help text")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-v, --version")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Prints the version. ",Object(b.b)("inlineCode",{parentName:"td"},"-vv")," prints node and typescript compiler versions, too.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-c, --cwd-mode")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Resolve config relative to the current directory instead of the directory of the entrypoint script.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--script-mode")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Resolve config relative to the directory of the entrypoint script. This is the default behavior.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-T, --transpile-only")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_TRANSPILE_ONLY")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"transpileOnly")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Use TypeScript's faster ",Object(b.b)("inlineCode",{parentName:"td"},"transpileModule")," (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--type-check")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_TYPE_CHECK")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Opposite of ",Object(b.b)("inlineCode",{parentName:"td"},"--transpile-only"),". (default: ",Object(b.b)("inlineCode",{parentName:"td"},"true"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-H, --compiler-host")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_COMPILER_HOST")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"compilerHost")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Use TypeScript's compiler host API (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-I, --ignore [pattern]")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_IGNORE")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"ignore")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Override the path patterns to skip compilation (default: ",Object(b.b)("inlineCode",{parentName:"td"},"/node_modules/"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-P, --project [path]")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_PROJECT")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"project")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to TypeScript JSON project file")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-C, --compiler [name]")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_COMPILER")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"compiler")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Specify a custom TypeScript compiler (default: ",Object(b.b)("inlineCode",{parentName:"td"},"typescript"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-D, --ignore-diagnostics [code]")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_IGNORE_DIAGNOSTICS")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"ignoreDiagnostics")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Ignore TypeScript warnings by diagnostic code")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"-O, --compiler-options [opts]")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_COMPILER_OPTIONS")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"compilerOptions")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"JSON object to merge with compiler options")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--cwd")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_CWD")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Behave as if invoked in this working directory. (default: ",Object(b.b)("inlineCode",{parentName:"td"},"process.cwd()"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--files")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_FILES")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"files")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Load ",Object(b.b)("inlineCode",{parentName:"td"},"files"),", ",Object(b.b)("inlineCode",{parentName:"td"},"include")," and ",Object(b.b)("inlineCode",{parentName:"td"},"exclude")," from ",Object(b.b)("inlineCode",{parentName:"td"},"tsconfig.json")," on startup (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--pretty")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_PRETTY")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"pretty")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Use pretty diagnostic formatter (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--skip-project")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_SKIP_PROJECT")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"skipProject")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Skip project config resolution and loading (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--skip-ignore")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_SKIP_IGNORE")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"skipIgnore")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Skip ignore checks (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--emit")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_EMIT")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"emit")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Emit output files into ",Object(b.b)("inlineCode",{parentName:"td"},".ts-node")," directory (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--prefer-ts-exts")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_PREFER_TS_EXTS")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"preferTsExts")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Re-order file extensions so that TypeScript imports are preferred (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--log-error")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_LOG_ERROR")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"logError")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Logs TypeScript errors to stderr instead of throwing exceptions (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--show-config")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Print resolved ",Object(b.b)("inlineCode",{parentName:"td"},"tsconfig.json"),", including ",Object(b.b)("inlineCode",{parentName:"td"},"ts-node")," options, and exit.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--transpiler [name]")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"transpiler")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Specify a third-party, non-typechecking transpiler")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_DEBUG")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable debug logging.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_HISTORY")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to history file for REPL. (default; ",Object(b.b)("inlineCode",{parentName:"td"},"~/.ts_node_repl_history"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"--scope")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TS_NODE_SCOPE")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"scope")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Scope compiler to files within ",Object(b.b)("inlineCode",{parentName:"td"},"scopeDir"),".  Files outside this directory will be ignored.  (default: ",Object(b.b)("inlineCode",{parentName:"td"},"false"),")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"scopeDir")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Sets directory for ",Object(b.b)("inlineCode",{parentName:"td"},"scope"),".  Defaults to tsconfig ",Object(b.b)("inlineCode",{parentName:"td"},"rootDir"),", directory containing ",Object(b.b)("inlineCode",{parentName:"td"},"tsconfig.json"),", or ",Object(b.b)("inlineCode",{parentName:"td"},"cwd"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"projectSearchDir")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Search for config file in this or parent directories.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"transformers"),"*"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"An object with transformers or a factory function that accepts a program and returns a transformers object to pass to TypeScript. Factory function cannot be used with ",Object(b.b)("inlineCode",{parentName:"td"},"transpileOnly")," flag")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"readFile"),"*"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Custom TypeScript-compatible file reading function")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"fileExists"),"*"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Custom TypeScript-compatible file existence function")))),Object(b.b)("h2",{id:"node-flags"},Object(b.b)("inlineCode",{parentName:"h2"},"node")," flags"),Object(b.b)("p",null,Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/api/cli.html"}),Object(b.b)("inlineCode",{parentName:"a"},"node")," flags")," must be passed directly to ",Object(b.b)("inlineCode",{parentName:"p"},"node"),"; they cannot be passed to the ",Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," binary nor can they be specified in ",Object(b.b)("inlineCode",{parentName:"p"},"tsconfig.json")),Object(b.b)("p",null,"We recommend using the ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/api/cli.html#cli_node_options_options"}),Object(b.b)("inlineCode",{parentName:"a"},"NODE_OPTIONS"))," environment variable to pass options to ",Object(b.b)("inlineCode",{parentName:"p"},"node"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"NODE_OPTIONS='--trace-deprecation --abort-on-uncaught-exception' ts-node ./index.ts\n")),Object(b.b)("p",null,"Alternatively, you can invoke ",Object(b.b)("inlineCode",{parentName:"p"},"node")," directly and install ",Object(b.b)("inlineCode",{parentName:"p"},"ts-node")," via ",Object(b.b)("inlineCode",{parentName:"p"},"--require"),"/",Object(b.b)("inlineCode",{parentName:"p"},"-r")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"node --trace-deprecation --abort-on-uncaught-exception -r ts-node/register ./index.ts\n")))}p.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=p(n),j=a,m=d["".concat(i,".").concat(j)]||d[j]||O[j]||b;return n?r.a.createElement(m,l(l({ref:t},o),{},{components:n})):r.a.createElement(m,l({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,i=new Array(b);i[0]=j;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var o=2;o<b;o++)i[o]=n[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"}}]);