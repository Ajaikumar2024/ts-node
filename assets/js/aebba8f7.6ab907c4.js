(self.webpackChunk_ts_node_website=self.webpackChunk_ts_node_website||[]).push([[308],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return k},kt:function(){return u}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),m=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},k=function(e){var t=m(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},s=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,k=o(e,["components","mdxType","originalType","parentName"]),s=m(n),u=r,c=s["".concat(p,".").concat(u)]||s[u]||d[u]||l;return n?i.createElement(c,a(a({ref:t},k),{},{components:n})):i.createElement(c,a({ref:t},k))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,a[1]=o;for(var m=2;m<l;m++)a[m]=n[m];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8895:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return o},toc:function(){return p},default:function(){return k}});var i=n(2122),r=n(9756),l=(n(7294),n(3905)),a={title:"Options"},o={unversionedId:"options",id:"options",isDocsHomePage:!1,title:"Options",description:"ts-node supports --print (-p), --eval (-e), --require (-r) and --interactive (-i) similar to the node.js CLI options.",source:"@site/docs/options.md",sourceDirName:".",slug:"/options",permalink:"/ts-node/docs/options",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/options.md",version:"current",frontMatter:{title:"Options"},sidebar:"primarySidebar",previous:{title:"Configuration",permalink:"/ts-node/docs/configuration"},next:{title:"CommonJS vs native ECMAScript modules",permalink:"/ts-node/docs/imports"}},p=[{value:"Shell",id:"shell",children:[]},{value:"TSConfig",id:"tsconfig",children:[]},{value:"Typechecking",id:"typechecking",children:[]},{value:"Transpilation",id:"transpilation",children:[]},{value:"Diagnostics",id:"diagnostics",children:[]},{value:"Advanced",id:"advanced",children:[]},{value:"API",id:"api",children:[]}],m={toc:p};function k(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ts-node")," supports ",(0,l.kt)("inlineCode",{parentName:"p"},"--print")," (",(0,l.kt)("inlineCode",{parentName:"p"},"-p"),"), ",(0,l.kt)("inlineCode",{parentName:"p"},"--eval")," (",(0,l.kt)("inlineCode",{parentName:"p"},"-e"),"), ",(0,l.kt)("inlineCode",{parentName:"p"},"--require")," (",(0,l.kt)("inlineCode",{parentName:"p"},"-r"),") and ",(0,l.kt)("inlineCode",{parentName:"p"},"--interactive")," (",(0,l.kt)("inlineCode",{parentName:"p"},"-i"),") similar to the ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/cli.html"},"node.js CLI options"),"."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Environment variables, where available, are in ",(0,l.kt)("inlineCode",{parentName:"em"},"ALL_CAPS"))),(0,l.kt)("h2",{id:"shell"},"Shell"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-h, --help"),"   Prints the help text"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-v, --version"),"   Prints the version. ",(0,l.kt)("inlineCode",{parentName:"li"},"-vv")," prints node and typescript compiler versions, too"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-e, --eval"),"   Evaluate code"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-p, --print"),"   Print result of ",(0,l.kt)("inlineCode",{parentName:"li"},"--eval")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-i, --interactive"),"   Opens the REPL even if stdin does not appear to be a terminal")),(0,l.kt)("h2",{id:"tsconfig"},"TSConfig"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-P, --project [path]"),"   Path to TypeScript JSON project file ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_PROJECT")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--skip-project"),"   Skip project config resolution and loading ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_SKIP_PROJECT")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-c, --cwd-mode"),"   Resolve config relative to the current directory instead of the directory of the entrypoint script"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-O, --compiler-options [opts]"),"   JSON object to merge with compiler options ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_COMPILER_OPTIONS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--show-config"),"   Print resolved ",(0,l.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),", including ",(0,l.kt)("inlineCode",{parentName:"li"},"ts-node")," options, and exit")),(0,l.kt)("h2",{id:"typechecking"},"Typechecking"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-T, --transpile-only"),"   Use TypeScript's faster ",(0,l.kt)("inlineCode",{parentName:"li"},"transpileModule")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_TRANSPILE_ONLY")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--type-check"),"   Opposite of ",(0,l.kt)("inlineCode",{parentName:"li"},"--transpile-only")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"true"),(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_TYPE_CHECK")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-H, --compiler-host"),"   Use TypeScript's compiler host API ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_COMPILER_HOST")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--files"),"   Load ",(0,l.kt)("inlineCode",{parentName:"li"},"files"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"include")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"exclude")," from ",(0,l.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," on startup ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_FILES")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-D, --ignore-diagnostics [code]"),"   Ignore TypeScript warnings by diagnostic code ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_IGNORE_DIAGNOSTICS"))),(0,l.kt)("h2",{id:"transpilation"},"Transpilation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-I, --ignore [pattern]"),"   Override the path patterns to skip compilation ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"/node_modules/")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_IGNORE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--skip-ignore"),"   Skip ignore checks ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_SKIP_IGNORE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-C, --compiler [name]"),"   Specify a custom TypeScript compiler ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"typescript")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_COMPILER")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--transpiler [name]"),"   Specify a third-party, non-typechecking transpiler"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--prefer-ts-exts"),"   Re-order file extensions so that TypeScript imports are preferred ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_PREFER_TS_EXTS"))),(0,l.kt)("h2",{id:"diagnostics"},"Diagnostics"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--log-error"),"   Logs TypeScript errors to stderr instead of throwing exceptions ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_LOG_ERROR")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--pretty"),"   Use pretty diagnostic formatter ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_PRETTY")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_DEBUG")," Enable debug logging",(0,l.kt)("br",null))),(0,l.kt)("h2",{id:"advanced"},"Advanced"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-r, --require [path]"),"   Require a node module before execution"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--cwd"),"   Behave as if invoked in this working directory ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"process.cwd()"),(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_CWD")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--emit"),"   Emit output files into ",(0,l.kt)("inlineCode",{parentName:"li"},".ts-node")," directory ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Environment:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_EMIT")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TS_NODE_HISTORY")," Path to history file for REPL ",(0,l.kt)("br",null),(0,l.kt)("em",{parentName:"li"},"Default:")," ",(0,l.kt)("inlineCode",{parentName:"li"},"~/.ts_node_repl_history"),(0,l.kt)("br",null))),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("p",null,"The API includes ",(0,l.kt)("a",{parentName:"p",href:"https://typestrong.org/ts-node/api/interfaces/RegisterOptions.html"},"additional options")," not shown here."))}k.isMDXComponent=!0}}]);