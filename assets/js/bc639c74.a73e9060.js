(self.webpackChunk_ts_node_website=self.webpackChunk_ts_node_website||[]).push([[375],{3905:function(t,l,n){"use strict";n.d(l,{Zo:function(){return c},kt:function(){return s}});var e=n(7294);function r(t,l,n){return l in t?Object.defineProperty(t,l,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[l]=n,t}function u(t,l){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);l&&(e=e.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),n.push.apply(n,e)}return n}function o(t){for(var l=1;l<arguments.length;l++){var n=null!=arguments[l]?arguments[l]:{};l%2?u(Object(n),!0).forEach((function(l){r(t,l,n[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(n,l))}))}return t}function k(t,l){if(null==t)return{};var n,e,r=function(t,l){if(null==t)return{};var n,e,r={},u=Object.keys(t);for(e=0;e<u.length;e++)n=u[e],l.indexOf(n)>=0||(r[n]=t[n]);return r}(t,l);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(e=0;e<u.length;e++)n=u[e],l.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=e.createContext({}),i=function(t){var l=e.useContext(d),n=l;return t&&(n="function"==typeof t?t(l):o(o({},l),t)),n},c=function(t){var l=i(t.components);return e.createElement(d.Provider,{value:l},t.children)},a={inlineCode:"code",wrapper:function(t){var l=t.children;return e.createElement(e.Fragment,{},l)}},p=e.forwardRef((function(t,l){var n=t.components,r=t.mdxType,u=t.originalType,d=t.parentName,c=k(t,["components","mdxType","originalType","parentName"]),p=i(n),s=r,m=p["".concat(d,".").concat(s)]||p[s]||a[s]||u;return n?e.createElement(m,o(o({ref:l},c),{},{components:n})):e.createElement(m,o({ref:l},c))}));function s(t,l){var n=arguments,r=l&&l.mdxType;if("string"==typeof t||r){var u=n.length,o=new Array(u);o[0]=p;var k={};for(var d in l)hasOwnProperty.call(l,d)&&(k[d]=l[d]);k.originalType=t,k.mdxType="string"==typeof t?t:r,o[1]=k;for(var i=2;i<u;i++)o[i]=n[i];return e.createElement.apply(null,o)}return e.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1640:function(t,l,n){"use strict";n.r(l),n.d(l,{frontMatter:function(){return o},metadata:function(){return k},toc:function(){return d},default:function(){return c}});var e=n(2122),r=n(9756),u=(n(7294),n(3905)),o={title:"Options"},k={unversionedId:"options-table",id:"options-table",isDocsHomePage:!1,title:"Options",description:"\x3c!--",source:"@site/docs/options-table.md",sourceDirName:".",slug:"/options-table",permalink:"/ts-node/docs/options-table",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/options-table.md",version:"current",frontMatter:{title:"Options"},sidebar:"hiddenSidebar"},d=[],i={toc:d};function c(t){var l=t.components,n=(0,r.Z)(t,["components"]);return(0,u.kt)("wrapper",(0,e.Z)({},i,n,{components:l,mdxType:"MDXLayout"}),(0,u.kt)("p",null,(0,u.kt)("inlineCode",{parentName:"p"},"ts-node")," supports ",(0,u.kt)("inlineCode",{parentName:"p"},"--print")," (",(0,u.kt)("inlineCode",{parentName:"p"},"-p"),"), ",(0,u.kt)("inlineCode",{parentName:"p"},"--eval")," (",(0,u.kt)("inlineCode",{parentName:"p"},"-e"),"), ",(0,u.kt)("inlineCode",{parentName:"p"},"--require")," (",(0,u.kt)("inlineCode",{parentName:"p"},"-r"),") and ",(0,u.kt)("inlineCode",{parentName:"p"},"--interactive")," (",(0,u.kt)("inlineCode",{parentName:"p"},"-i"),") similar to the ",(0,u.kt)("a",{parentName:"p",href:"https://nodejs.org/api/cli.html"},"node.js CLI options"),"."),(0,u.kt)("p",null,"The API includes ",(0,u.kt)("a",{parentName:"p",href:"https://typestrong.org/ts-node/api/interfaces/registeroptions.html"},"additional options")," not shown below."),(0,u.kt)("p",null,(0,u.kt)("em",{parentName:"p"},"Environment variables, where available, are in ",(0,u.kt)("inlineCode",{parentName:"em"},"ALL_CAPS"))),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("th",null,"CLI"),(0,u.kt)("th",null,"TSConfig"),(0,u.kt)("th",null,"Description")),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",{colspan:"3"},(0,u.kt)("strong",null,"Shell"))),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-h, --help"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Prints the help text ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-v, --version"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Prints the version. ",(0,u.kt)("code",null,"-vv")," prints node and typescript compiler versions, too ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-e, --eval"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Evaluate code ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-p, --print"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Print result of ",(0,u.kt)("code",null,"--eval")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-i, --interactive"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Opens the REPL even if stdin does not appear to be a terminal ")),(0,u.kt)("tr",null,(0,u.kt)("td",{colspan:"3"},(0,u.kt)("strong",null,"TSConfig"))),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-P, --project [path]"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Path to TypeScript JSON project file ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_PROJECT")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--skip-project"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Skip project config resolution and loading ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_SKIP_PROJECT")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-c, --cwd-mode"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Resolve config relative to the current directory instead of the directory of the entrypoint script ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-O, --compiler-options [opts]"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"compilerOptions")," "),(0,u.kt)("td",null," JSON object to merge with compiler options ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_COMPILER_OPTIONS")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--show-config"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Print resolved ",(0,u.kt)("code",null,"tsconfig.json"),", including ",(0,u.kt)("code",null,"ts-node")," options, and exit ")),(0,u.kt)("tr",null,(0,u.kt)("td",{colspan:"3"},(0,u.kt)("strong",null,"Typechecking"))),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-T, --transpile-only"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"transpileOnly")," "),(0,u.kt)("td",null," Use TypeScript's faster ",(0,u.kt)("code",null,"transpileModule")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_TRANSPILE_ONLY")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--type-check"))," "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Opposite of ",(0,u.kt)("code",null,"--transpile-only")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"true"),(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_TYPE_CHECK")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-H, --compiler-host"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"compilerHost")," "),(0,u.kt)("td",null," Use TypeScript's compiler host API ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_COMPILER_HOST")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--files"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"files")," "),(0,u.kt)("td",null," Load ",(0,u.kt)("code",null,"files"),", ",(0,u.kt)("code",null,"include")," and ",(0,u.kt)("code",null,"exclude")," from ",(0,u.kt)("code",null,"tsconfig.json")," on startup ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_FILES")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-D, --ignore-diagnostics [code]"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"ignoreDiagnostics")," "),(0,u.kt)("td",null," Ignore TypeScript warnings by diagnostic code ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_IGNORE_DIAGNOSTICS")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",{colspan:"3"},(0,u.kt)("strong",null,"Transpilation"))),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-I, --ignore [pattern]"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"ignore")," "),(0,u.kt)("td",null," Override the path patterns to skip compilation ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"/node_modules/")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_IGNORE")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--skip-ignore"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"skipIgnore")," "),(0,u.kt)("td",null," Skip ignore checks ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_SKIP_IGNORE")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-C, --compiler [name]"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"compiler")," "),(0,u.kt)("td",null," Specify a custom TypeScript compiler ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"typescript")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_COMPILER")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--transpiler [name]"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"transpiler")," "),(0,u.kt)("td",null," Specify a third-party, non-typechecking transpiler ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--prefer-ts-exts"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"preferTsExts")," "),(0,u.kt)("td",null," Re-order file extensions so that TypeScript imports are preferred ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_PREFER_TS_EXTS")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",{colspan:"3"},(0,u.kt)("strong",null,"Diagnostics"))),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--log-error"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"logError")," "),(0,u.kt)("td",null," Logs TypeScript errors to stderr instead of throwing exceptions ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_LOG_ERROR")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--pretty"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"pretty")," "),(0,u.kt)("td",null," Use pretty diagnostic formatter ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_PRETTY")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"  "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Enable debug logging",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_DEBUG")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",{colspan:"3"},(0,u.kt)("strong",null,"Advanced"))),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"-r, --require [path]"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"require")," "),(0,u.kt)("td",null," Require a node module before execution")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--cwd"))," "),(0,u.kt)("td",null," "),(0,u.kt)("td",null," Behave as if invoked in this working directory ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"process.cwd()"),(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_CWD"),"  ")),(0,u.kt)("tr",null,(0,u.kt)("td",null," ",(0,u.kt)("nobr",null,(0,u.kt)("code",null,"--emit"))," "),(0,u.kt)("td",null," ",(0,u.kt)("code",null,"emit")," "),(0,u.kt)("td",null," Emit output files into ",(0,u.kt)("code",null,".ts-node")," directory ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"false")," ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_EMIT")," ")),(0,u.kt)("tr",null,(0,u.kt)("td",null,"  "),(0,u.kt)("td",null,"  "),(0,u.kt)("td",null," Path to history file for REPL ",(0,u.kt)("br",null),(0,u.kt)("em",null,"Default:")," ",(0,u.kt)("code",null,"~/.ts_node_repl_history"),(0,u.kt)("br",null),(0,u.kt)("em",null,"Env:")," ",(0,u.kt)("code",null,"TS_NODE_HISTORY")," ")))))}c.isMDXComponent=!0}}]);