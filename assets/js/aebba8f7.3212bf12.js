(self.webpackChunk_ts_node_website=self.webpackChunk_ts_node_website||[]).push([[308],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return u}});var i=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=i.createContext({}),m=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=m(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},k=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=m(n),u=l,N=k["".concat(p,".").concat(u)]||k[u]||d[u]||a;return n?i.createElement(N,r(r({ref:t},s),{},{components:n})):i.createElement(N,r({ref:t},s))}));function u(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var m=2;m<a;m++)r[m]=n[m];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8895:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return r},metadata:function(){return o},toc:function(){return p},default:function(){return s}});var i=n(2122),l=n(9756),a=(n(7294),n(3905)),r={title:"Options"},o={unversionedId:"options",id:"options",isDocsHomePage:!1,title:"Options",description:"ts-node supports --print (-p), --eval (-e), --require (-r) and --interactive (-i) similar to the node.js CLI options.",source:"@site/docs/options.md",sourceDirName:".",slug:"/options",permalink:"/ts-node/docs/options",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/options.md",version:"current",frontMatter:{title:"Options"},sidebar:"primarySidebar",previous:{title:"Configuration",permalink:"/ts-node/docs/configuration"},next:{title:"CommonJS vs native ECMAScript modules",permalink:"/ts-node/docs/imports"}},p=[{value:"Shell",id:"shell",children:[]},{value:"TSConfig",id:"tsconfig",children:[]},{value:"Typechecking",id:"typechecking",children:[]},{value:"Transpilation",id:"transpilation",children:[]},{value:"Diagnostics",id:"diagnostics",children:[]},{value:"Advanced",id:"advanced",children:[]},{value:"API",id:"api",children:[]}],m={toc:p};function s(e){var t=e.components,n=(0,l.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ts-node")," supports ",(0,a.kt)("inlineCode",{parentName:"p"},"--print")," (",(0,a.kt)("inlineCode",{parentName:"p"},"-p"),"), ",(0,a.kt)("inlineCode",{parentName:"p"},"--eval")," (",(0,a.kt)("inlineCode",{parentName:"p"},"-e"),"), ",(0,a.kt)("inlineCode",{parentName:"p"},"--require")," (",(0,a.kt)("inlineCode",{parentName:"p"},"-r"),") and ",(0,a.kt)("inlineCode",{parentName:"p"},"--interactive")," (",(0,a.kt)("inlineCode",{parentName:"p"},"-i"),") similar to the ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/api/cli.html"},"node.js CLI options"),"."),(0,a.kt)("p",null,"All command-line flags support both ",(0,a.kt)("inlineCode",{parentName:"p"},"--camelCase")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"--hyphen-case"),"."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Environment variables, where available, are in ",(0,a.kt)("inlineCode",{parentName:"em"},"ALL_CAPS"))),(0,a.kt)("h2",{id:"shell"},"Shell"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-h, --help"),"   Prints the help text"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-v, --version"),"   Prints the version. ",(0,a.kt)("inlineCode",{parentName:"li"},"-vv")," prints node and typescript compiler versions, too"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-e, --eval"),"   Evaluate code"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p, --print"),"   Print result of ",(0,a.kt)("inlineCode",{parentName:"li"},"--eval")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-i, --interactive"),"   Opens the REPL even if stdin does not appear to be a terminal")),(0,a.kt)("h2",{id:"tsconfig"},"TSConfig"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-P, --project [path]"),"   Path to TypeScript JSON project file ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_PROJECT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--skipProject"),"   Skip project config resolution and loading ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_SKIP_PROJECT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-c, --cwdMode"),"   Resolve config relative to the current directory instead of the directory of the entrypoint script"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-O, --compilerOptions [opts]"),"   JSON object to merge with compiler options ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_COMPILER_OPTIONS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--showConfig"),"   Print resolved ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),", including ",(0,a.kt)("inlineCode",{parentName:"li"},"ts-node")," options, and exit")),(0,a.kt)("h2",{id:"typechecking"},"Typechecking"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-T, --transpileOnly"),"   Use TypeScript's faster ",(0,a.kt)("inlineCode",{parentName:"li"},"transpileModule")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_TRANSPILE_ONLY")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--typeCheck"),"   Opposite of ",(0,a.kt)("inlineCode",{parentName:"li"},"--transpileOnly")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_TYPE_CHECK")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-H, --compilerHost"),"   Use TypeScript's compiler host API ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_COMPILER_HOST")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--files"),"   Load ",(0,a.kt)("inlineCode",{parentName:"li"},"files"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"include")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"exclude")," from ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," on startup ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_FILES")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-D, --ignoreDiagnostics [code]"),"   Ignore TypeScript warnings by diagnostic code ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_IGNORE_DIAGNOSTICS"))),(0,a.kt)("h2",{id:"transpilation"},"Transpilation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-I, --ignore [pattern]"),"   Override the path patterns to skip compilation ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"/node_modules/")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_IGNORE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--skipIgnore"),"   Skip ignore checks ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_SKIP_IGNORE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-C, --compiler [name]"),"   Specify a custom TypeScript compiler ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"typescript")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_COMPILER")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--swc"),"   Transpile with ",(0,a.kt)("a",{parentName:"li",href:"/ts-node/docs/transpilers#swc"},"swc"),".  Implies ",(0,a.kt)("inlineCode",{parentName:"li"},"--transpileOnly")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--transpiler [name]"),"   Specify a third-party, non-typechecking transpiler"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--preferTsExts"),"   Re-order file extensions so that TypeScript imports are preferred ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_PREFER_TS_EXTS"))),(0,a.kt)("h2",{id:"diagnostics"},"Diagnostics"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--logError"),"   Logs TypeScript errors to stderr instead of throwing exceptions ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_LOG_ERROR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--pretty"),"   Use pretty diagnostic formatter ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_PRETTY")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_DEBUG")," Enable debug logging",(0,a.kt)("br",null))),(0,a.kt)("h2",{id:"advanced"},"Advanced"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-r, --require [path]"),"   Require a node module before execution"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--cwd"),"   Behave as if invoked in this working directory ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"process.cwd()"),(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_CWD")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--emit"),"   Emit output files into ",(0,a.kt)("inlineCode",{parentName:"li"},".ts-node")," directory ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_EMIT")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--scope"),"  Scope compiler to files within ",(0,a.kt)("inlineCode",{parentName:"li"},"scopeDir"),".  Anything outside this directory is ignored. ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default: ",(0,a.kt)("inlineCode",{parentName:"em"},"false")," ",(0,a.kt)("br",null)),"Environment:* ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_SCOPE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--scopeDir")," Directory within which compiler is limited when ",(0,a.kt)("inlineCode",{parentName:"li"},"scope")," is enabled. ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," First of: ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),' "rootDir" if specified, directory containing ',(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json"),", or cwd if no ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," is loaded.",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_SCOPE_DIR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"moduleTypes"),"  Override the module type of certain files, ignoring the ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," ",(0,a.kt)("inlineCode",{parentName:"li"},'"type"')," field.  See ",(0,a.kt)("a",{parentName:"li",href:"/ts-node/docs/module-type-overrides"},"Module type overrides")," for details.",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," obeys ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," ",(0,a.kt)("inlineCode",{parentName:"li"},'"type"')," and ",(0,a.kt)("inlineCode",{parentName:"li"},"tsconfig.json")," ",(0,a.kt)("inlineCode",{parentName:"li"},'"module"')," ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Can only be specified via ",(0,a.kt)("inlineCode",{parentName:"em"},"tsconfig.json")," or API.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_HISTORY")," Path to history file for REPL ",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"~/.ts_node_repl_history"),(0,a.kt)("br",null)),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--noExperimentalReplAwait")," Disable top-level await in REPL.  Equivalent to node's ",(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/api/cli.html#cli_no_experimental_repl_await"},(0,a.kt)("inlineCode",{parentName:"a"},"--no-experimental-repl-await")),(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," Enabled if TypeScript version is 3.8 or higher and target is ES2018 or higher.",(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Environment:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"TS_NODE_EXPERIMENTAL_REPL_AWAIT")," set ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," to disable"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"experimentalResolverFeatures")," Enable experimental features that re-map imports and require calls to support: ",(0,a.kt)("inlineCode",{parentName:"li"},"baseUrl"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"paths"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"rootDirs"),", ",(0,a.kt)("inlineCode",{parentName:"li"},".js")," to ",(0,a.kt)("inlineCode",{parentName:"li"},".ts")," file extension mappings, ",(0,a.kt)("inlineCode",{parentName:"li"},"outDir")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"rootDir")," mappings for composite projects and monorepos.  For details, see ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/TypeStrong/ts-node/issues/1514"},"#1514"),(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Default:")," ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),(0,a.kt)("br",null),(0,a.kt)("em",{parentName:"li"},"Can only be specified via ",(0,a.kt)("inlineCode",{parentName:"em"},"tsconfig.json")," or API."))),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("p",null,"The API includes ",(0,a.kt)("a",{parentName:"p",href:"https://typestrong.org/ts-node/api/interfaces/RegisterOptions.html"},"additional options")," not shown here."))}s.isMDXComponent=!0}}]);