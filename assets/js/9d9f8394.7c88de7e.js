(self.webpackChunk_ts_node_website=self.webpackChunk_ts_node_website||[]).push([[360],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1416:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l},default:function(){return c}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),a={title:"Troubleshooting"},s={unversionedId:"troubleshooting",id:"troubleshooting",isDocsHomePage:!1,title:"Troubleshooting",description:"Understanding configuration",source:"@site/docs/troubleshooting.md",sourceDirName:".",slug:"/troubleshooting",permalink:"/ts-node/docs/troubleshooting",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/troubleshooting.md",version:"current",frontMatter:{title:"Troubleshooting"},sidebar:"primarySidebar",previous:{title:"CommonJS vs native ECMAScript modules",permalink:"/ts-node/docs/imports"},next:{title:"Make it fast",permalink:"/ts-node/docs/performance"}},l=[{value:"Understanding configuration",id:"understanding-configuration",children:[]},{value:"Understanding Errors",id:"understanding-errors",children:[{value:"<code>TSError</code>",id:"tserror",children:[]},{value:"<code>SyntaxError</code>",id:"syntaxerror",children:[]}]}],p={toc:l};function c(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"understanding-configuration"},"Understanding configuration"),(0,i.kt)("p",null,"ts-node uses sensible default configurations to reduce boilerplate while still respecting ",(0,i.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," if you\nhave one.  If you are unsure which configuration is used, you can log it with ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-node --showConfig"),".  This is similar to\n",(0,i.kt)("inlineCode",{parentName:"p"},"tsc --showConfig")," but includes ",(0,i.kt)("inlineCode",{parentName:"p"},'"ts-node"')," options as well."),(0,i.kt)("p",null,"ts-node also respects your locally-installed ",(0,i.kt)("inlineCode",{parentName:"p"},"typescript")," version, but global installations fallback to the globally-installed\n",(0,i.kt)("inlineCode",{parentName:"p"},"typescript"),".  If you are unsure which versions are used, ",(0,i.kt)("inlineCode",{parentName:"p"},"ts-node -vv")," will log them."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ ts-node -vv\nts-node v10.0.0\nnode v16.1.0\ncompiler v4.2.2\n\n$ ts-node --showConfig\n{\n  "compilerOptions": {\n    "target": "es6",\n    "lib": [\n      "es6",\n      "dom"\n    ],\n    "rootDir": "./src",\n    "outDir": "./.ts-node",\n    "module": "commonjs",\n    "moduleResolution": "node",\n    "strict": true,\n    "declaration": false,\n    "sourceMap": true,\n    "inlineSources": true,\n    "types": [\n      "node"\n    ],\n    "stripInternal": true,\n    "incremental": true,\n    "skipLibCheck": true,\n    "importsNotUsedAsValues": "error",\n    "inlineSourceMap": false,\n    "noEmit": false\n  },\n  "ts-node": {\n    "cwd": "/d/project",\n    "projectSearchDir": "/d/project",\n    "require": [],\n    "project": "/d/project/tsconfig.json"\n  }\n}\n')),(0,i.kt)("h2",{id:"understanding-errors"},"Understanding Errors"),(0,i.kt)("p",null,"It is important to differentiate between errors from ts-node, errors from the TypeScript compiler, and errors from ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),".  It is also important to understand when errors are caused by a type error in your code, a bug in your code, or a flaw in your configuration."),(0,i.kt)("h3",{id:"tserror"},(0,i.kt)("inlineCode",{parentName:"h3"},"TSError")),(0,i.kt)("p",null,"Type errors from the compiler are thrown as a ",(0,i.kt)("inlineCode",{parentName:"p"},"TSError"),".  These are the same as errors you get from ",(0,i.kt)("inlineCode",{parentName:"p"},"tsc"),"."),(0,i.kt)("h3",{id:"syntaxerror"},(0,i.kt)("inlineCode",{parentName:"h3"},"SyntaxError")),(0,i.kt)("p",null,"Any error that is not a ",(0,i.kt)("inlineCode",{parentName:"p"},"TSError")," is from node.js (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"SyntaxError"),"), and cannot be fixed by TypeScript or ts-node. These are bugs in your code or configuration."),(0,i.kt)("h4",{id:"unsupported-javascript-syntax"},"Unsupported JavaScript syntax"),(0,i.kt)("p",null,"Your version of ",(0,i.kt)("inlineCode",{parentName:"p"},"node"),' may not support all JavaScript syntax supported by TypeScript.  The compiler must transform this syntax via "downleveling," which is controlled by\nthe ',(0,i.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig#target"},"tsconfig ",(0,i.kt)("inlineCode",{parentName:"a"},'"target"')," option"),".  Otherwise your code will compile fine, but node will throw a ",(0,i.kt)("inlineCode",{parentName:"p"},"SyntaxError"),"."),(0,i.kt)("p",null,"For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," 12 does not understand the ",(0,i.kt)("inlineCode",{parentName:"p"},"?.")," optional chaining operator.  If you use ",(0,i.kt)("inlineCode",{parentName:"p"},'"target": "esnext"'),", then the following TypeScript syntax:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const bar: string | undefined = foo?.bar;\n")),(0,i.kt)("p",null,"will compile into this JavaScript:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const a = foo?.bar;\n")),(0,i.kt)("p",null,"When you try to run this code, node 12 will throw a ",(0,i.kt)("inlineCode",{parentName:"p"},"SyntaxError"),".  To fix this, you must switch to ",(0,i.kt)("inlineCode",{parentName:"p"},'"target": "es2019"')," or lower so TypeScript transforms ",(0,i.kt)("inlineCode",{parentName:"p"},"?.")," into something ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," can understand."))}c.isMDXComponent=!0}}]);