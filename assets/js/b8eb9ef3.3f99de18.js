(self.webpackChunk_ts_node_website=self.webpackChunk_ts_node_website||[]).push([[570],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},l=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),f=o,m=l["".concat(c,".").concat(f)]||l[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=l;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},1950:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a={title:"Visual Studio Code"},s={unversionedId:"recipes/visual-studio-code",id:"recipes/visual-studio-code",isDocsHomePage:!1,title:"Visual Studio Code",description:"Create a new Node.js debug configuration, add -r ts-node/register to node args and move the program to the args list (so VS Code doesn't look for outFiles).",source:"@site/docs/recipes/visual-studio-code.md",sourceDirName:"recipes",slug:"/recipes/visual-studio-code",permalink:"/ts-node/docs/recipes/visual-studio-code",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/recipes/visual-studio-code.md",version:"current",frontMatter:{title:"Visual Studio Code"},sidebar:"primarySidebar",previous:{title:"Tape",permalink:"/ts-node/docs/recipes/tape"},next:{title:"Other",permalink:"/ts-node/docs/recipes/other"}},c=[],u={toc:c};function p(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Create a new Node.js debug configuration, add ",(0,i.kt)("inlineCode",{parentName:"p"},"-r ts-node/register")," to node args and move the ",(0,i.kt)("inlineCode",{parentName:"p"},"program")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"args")," list (so VS Code doesn't look for ",(0,i.kt)("inlineCode",{parentName:"p"},"outFiles"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".vscode/launch.json"',title:'".vscode/launch.json"'},'{\n    "configurations": [{\n        "type": "node",\n        "request": "launch",\n        "name": "Launch Program",\n        "runtimeArgs": [\n            "-r",\n            "ts-node/register"\n        ],\n        "args": [\n            "${workspaceFolder}/src/index.ts"\n        ]\n    }],\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," If you are using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--project <tsconfig.json>")," command line argument as per the ",(0,i.kt)("a",{parentName:"p",href:"/ts-node/docs/configuration"},"Configuration Options"),', and want to apply this same behavior when launching in VS Code, add an "env" key into the launch configuration: ',(0,i.kt)("inlineCode",{parentName:"p"},'"env": { "TS_NODE_PROJECT": "<tsconfig.json>" }'),"."))}p.isMDXComponent=!0}}]);