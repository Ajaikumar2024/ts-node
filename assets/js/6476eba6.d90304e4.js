(self.webpackChunk_ts_node_website=self.webpackChunk_ts_node_website||[]).push([[827],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5644:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l},default:function(){return c}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i={title:"Usage"},s={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Shell",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/ts-node/docs/usage",editUrl:"https://github.com/TypeStrong/ts-node/edit/docs/website/docs/usage.md",version:"current",frontMatter:{title:"Usage"},sidebar:"primarySidebar",previous:{title:"Installation",permalink:"/ts-node/docs/installation"},next:{title:"Configuration",permalink:"/ts-node/docs/configuration"}},l=[{value:"Shell",id:"shell",children:[]},{value:"Shebang",id:"shebang",children:[]},{value:"Programmatic",id:"programmatic",children:[{value:"Developers",id:"developers",children:[]}]}],p={toc:l};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"shell"},"Shell"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Execute a script as `node` + `tsc`.\nts-node script.ts\n\n# Starts a TypeScript REPL.\nts-node\n\n# Execute code with TypeScript.\nts-node -e 'console.log(\"Hello, world!\")'\n\n# Execute, and print, code with TypeScript.\nts-node -p -e '\"Hello, world!\"'\n\n# Pipe scripts to execute with TypeScript.\necho 'console.log(\"Hello, world!\")' | ts-node\n\n# Equivalent to ts-node --transpile-only\nts-node-transpile-only script.ts\n\n# Equivalent to ts-node --cwd-mode\nts-node-cwd script.ts\n")),(0,a.kt)("h2",{id:"shebang"},"Shebang"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'#!/usr/bin/env ts-node\n\nconsole.log("Hello, world!")\n')),(0,a.kt)("p",null,"Passing options via shebang requires the ",(0,a.kt)("a",{parentName:"p",href:"https://manpages.debian.org/bullseye/coreutils/env.1.en.html#S"},(0,a.kt)("inlineCode",{parentName:"a"},"env -S")," flag"),", which is available on recent versions of ",(0,a.kt)("inlineCode",{parentName:"p"},"env"),". (",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TypeStrong/ts-node/pull/1448#issuecomment-913895766"},"compatibility"),")"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"#!/usr/bin/env -S ts-node --files\n// This shebang works on Mac and Linux with newer versions of env\n// Technically, Mac allows omitting `-S`, but Linux requires it\n")),(0,a.kt)("p",null,"To write scripts with maximum portability, ",(0,a.kt)("a",{parentName:"p",href:"./configuration#via-tsconfigjson-recommended"},"specify all options in your ",(0,a.kt)("inlineCode",{parentName:"a"},"tsconfig.json"))," and omit them from the shebang."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"#!/usr/bin/env ts-node\n// This shebang works everywhere\n")),(0,a.kt)("p",null,"To test your version of ",(0,a.kt)("inlineCode",{parentName:"p"},"env")," for compatibility:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Note that these unusual quotes are necessary\n/usr/bin/env --debug '-S echo foo bar'\n")),(0,a.kt)("h2",{id:"programmatic"},"Programmatic"),(0,a.kt)("p",null,"You can require ts-node and register the loader for future requires by using ",(0,a.kt)("inlineCode",{parentName:"p"},"require('ts-node').register({ /* options */ })"),". You can also use file shortcuts - ",(0,a.kt)("inlineCode",{parentName:"p"},"node -r ts-node/register")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"node -r ts-node/register/transpile-only")," - depending on your preferences."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," If you need to use advanced node.js CLI arguments (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"--inspect"),"), use them with ",(0,a.kt)("inlineCode",{parentName:"p"},"node -r ts-node/register")," instead of ts-node's CLI."),(0,a.kt)("h3",{id:"developers"},"Developers"),(0,a.kt)("p",null,"ts-node exports a ",(0,a.kt)("inlineCode",{parentName:"p"},"create()")," function that can be used to initialize a TypeScript compiler that isn't registered to ",(0,a.kt)("inlineCode",{parentName:"p"},"require.extensions"),", and it uses the same code as ",(0,a.kt)("inlineCode",{parentName:"p"},"register"),"."))}c.isMDXComponent=!0}}]);